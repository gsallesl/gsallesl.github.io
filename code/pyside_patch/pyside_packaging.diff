diff --git a/setuptools/build.py b/setuptools/build.py
index 36d83ea..62a58bc 100644
--- a/setuptools/build.py
+++ b/setuptools/build.py
@@ -22,14 +22,14 @@ modules = {
         ["Generatorrunner", "master", "https://github.com/PySide/Generatorrunner.git"],
         ["Shiboken", "master", "https://github.com/PySide/Shiboken.git"],
         ["PySide", "master", "https://github.com/PySide/PySide.git"],
-        ["Tools", "master", "https://github.com/PySide/Tools.git"],
+#        ["Tools", "master", "https://github.com/PySide/Tools.git"],
     ],
     'stable': [
         ["Apiextractor", "0.10.8", "https://github.com/PySide/Apiextractor.git"],
         ["Generatorrunner", "0.6.14", "https://github.com/PySide/Generatorrunner.git"],
         ["Shiboken", "1.0.9", "https://github.com/PySide/Shiboken.git"],
         ["PySide", "1.0.8", "https://github.com/PySide/PySide.git"],
-        ["Tools", "0.2.13", "https://github.com/PySide/Tools.git"],
+#        ["Tools", "0.2.13", "https://github.com/PySide/Tools.git"],
     ],
 }
 
@@ -85,27 +85,28 @@ def process_module(download, module, modules_dir, install_dir, qtinfo, py_includ
     if download:
         if os.path.exists(module_name):
             print("Deleting module folder %s..." % module_name)
-            rmtree(module_name)
+            #rmtree(module_name)
+        else:
+            # Clone sources from git repository
+            repo = module[2]
+            print("Downloading " + module_name + " sources at " + repo)
+            if run_process("git", "clone", repo) != 0:
+                raise Exception("Error cloning " + repo)
+            os.chdir(modules_dir + "/" + module_name)
         
-        # Clone sources from git repository
-        repo = module[2]
-        print("Downloading " + module_name + " sources at " + repo)
-        if run_process("git", "clone", repo) != 0:
-            raise Exception("Error cloning " + repo)
-        os.chdir(modules_dir + "/" + module_name)
-    
-        # Checkout branch
-        branch = module[1]
-        print("Changing to branch " + branch + " in " + module_name)
-        if run_process("git", "checkout", branch) != 0:
-            raise Exception("Error changing to branch " + branch + " in " + module_name)
+            # Checkout branch
+            branch = module[1]
+            print("Changing to branch " + branch + " in " + module_name)
+            if run_process("git", "checkout", branch) != 0:
+                raise Exception("Error changing to branch " + branch + " in " + module_name)
     
     build_dir = os.path.join(os.path.join(modules_dir, module_name),  "build")
-    if os.path.exists(build_dir):
-        print("Deleting build folder %s..." % build_dir)
-        rmtree(build_dir)
-    print("Creating build folder %s..." % build_dir)
-    os.mkdir(build_dir)
+    #if os.path.exists(build_dir):
+    #    print("Deleting build folder %s..." % build_dir)
+    #    rmtree(build_dir)
+    if not os.path.exists(build_dir):
+    	print("Creating build folder %s..." % build_dir)
+    	os.mkdir(build_dir)
     os.chdir(build_dir)
     
     # Compile
