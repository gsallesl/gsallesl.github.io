<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>gsallesl.github.io</title><link href="/" rel="alternate"></link><link href="/feed" rel="self"></link><id>/</id><updated>2015-05-12T19:30:00+02:00</updated><entry><title>SSH ProxyCommand Resolver</title><link href="/ssh-proxycommand-resolver.html" rel="alternate"></link><updated>2015-05-12T19:30:00+02:00</updated><author><name>Gabriel</name></author><id>tag:,2015-05-12:ssh-proxycommand-resolver.html</id><summary type="html">&lt;p&gt;SSH ProxyResolver dynamically determines the &lt;code&gt;ProxyCommand&lt;/code&gt; to use for a SSH &lt;code&gt;Host&lt;/code&gt; alias based on your current network connection and a configuration you provide.&lt;/p&gt;
&lt;p&gt;SSH ProxyCommand configuration parameter provides a great way to nicely access a computer not directly accessible on the internet with a simple command.&lt;/p&gt;
&lt;p&gt;This configuration parameter is particularly useful on a laptop SSH configuration to access such a system. You may have to change this parameter when switching between networks: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When connected to the same network as &lt;code&gt;myhost&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# .ssh/config&lt;/span&gt;
Host myhost
HostName IPAddress
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;When proxying via a server facing the internet that can access &lt;code&gt;myhost&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# .ssh/config&lt;/span&gt;
Host myhost
ProxyCommand ssh internet_facing_server_IP -W IPAddress:some_port
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;When using a meeting point on another server, for example when the system facing the internet and on the same network as &lt;code&gt;myhost&lt;/code&gt; is down:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On my host:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -NR 2345:localhost:22  internet_facing_server2_IP
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On the client:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# .ssh/config&lt;/span&gt;
Host myhost
ProxyCommand ssh internet_facing_server2_IP -W localhost:2345
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the system &lt;code&gt;myhost&lt;/code&gt; actually hosts some of your code on git bare repositories, you may be constrained to use a single SSH alias and adapt the SSH configuration depending on the network you are connected to so that you can still perform &lt;code&gt;pull&lt;/code&gt; and &lt;code&gt;push&lt;/code&gt; operations. However, you may want to avoid modifying your configuration many times a day.&lt;/p&gt;
&lt;p&gt;To avoid having to make these changes manually, here is a little tool, ProxyCommandResolver (pcr), which will pick up the correct &lt;code&gt;ProxyCommand&lt;/code&gt; to use for you. pcr uses a configuration file that make an association between an SSH Host alias, multiple &lt;code&gt;ProxyCommand&lt;/code&gt; and your current connection parameters (Wifi access point name for example) and returns the &lt;code&gt;ProxyCommand&lt;/code&gt; to be used.&lt;/p&gt;
&lt;p&gt;So far, the connection parameters supported by pcr are the default routing interface, your wifi ESSID, your NetworkManager connection name or your current IP address.&lt;/p&gt;
&lt;p&gt;The tool consists of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="code/pcr/pcr.py"&gt;The pcr.py python script&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="code/pcr/pcr.xml"&gt;An XML based configuration file&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The corresponding SSH configuration to make use of this script is the following. One of the nice feature of the proxy command parameter is that it allows to take the output of a command as a parameter with the following syntax.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Host foo
ProxyCommand &lt;span class="k"&gt;$(&lt;/span&gt;/path/to/pcr.py %h&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# for example $HOME/.ssh/pcr.py&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The configuration elements works as follow:
 * &lt;code&gt;ProxyHost&lt;/code&gt;: correspond to the configuration that apply to a SSH Host alias.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Host&lt;/code&gt;: the Host Alias as defined in the SSH configuration&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Proxy&lt;/code&gt;: Delimits a ProxyCommand and the conditions that lead to this specific ProxyCommand&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DefaultNetworkInterfaceName&lt;/code&gt;: the name of the default network interface that must be matched&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;LocalConnectionName&lt;/code&gt;: either the ESSID or the name of the connection defined in the &lt;code&gt;NetworkManager&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DefaultNetworkIPAddress&lt;/code&gt;: the IP address of your default interface.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A &lt;code&gt;Condition&lt;/code&gt; section defines one or multiple conditions that must apply to chose a specific &lt;code&gt;ProxyCommand&lt;/code&gt;. A &lt;code&gt;Proxy&lt;/code&gt; that have the &lt;code&gt;fallback="yes"&lt;/code&gt; attribute is used in case of any of the previous Proxy's Condition(s) worked.&lt;/p&gt;
&lt;p&gt;This script is designed to work on Linux and has been tested on Ubuntu LTS only. Use at your own risks!&lt;/p&gt;
&lt;p&gt;I hope it will help you to save some of your SSH configuration edition time ;)&lt;/p&gt;</summary><category term="admin"></category><category term="SSH"></category><category term="ProxyCommand"></category><category term="mobility"></category></entry><entry><title>Compiling PySide 1.0.8 for IDAPRO 6.5 on Windows 7</title><link href="/compiling-pyside-108-for-idapro-65-on-windows-7.html" rel="alternate"></link><updated>2015-05-07T19:30:00+02:00</updated><author><name>Gabriel</name></author><id>tag:,2015-05-07:compiling-pyside-108-for-idapro-65-on-windows-7.html</id><summary type="html">&lt;p&gt;The &lt;a href="https://gist.github.com/ancat/8078106"&gt;Compiling PySide for IDA Pro on Windows&lt;/a&gt; page provides very useful instructions. However, as we tried to compile PySide following these instructions, we had to make a few changes to the &lt;code&gt;packaging&lt;/code&gt;, &lt;code&gt;shiboken&lt;/code&gt;, and &lt;code&gt;PySide&lt;/code&gt; repositories to make the PySide plugging compile properly.&lt;/p&gt;
&lt;p&gt;First you will notice that the &lt;code&gt;build.py&lt;/code&gt; script under &lt;code&gt;packaging/setuptools&lt;/code&gt; automatically removes the modules directory. This behavior prevents us to apply the &lt;a href="http://dvlabs.tippingpoint.com/img/mindshare/pyside_diff.diff"&gt;initial patch&lt;/a&gt; correctly. We broke down this patchset by repository: our new patches can be applied to each repository/module individually.&lt;/p&gt;
&lt;p&gt;We also made two small changes to the shiboken patch and PySide patch to successfully compile the PySide module. The resulting installer under packaging\setuptools\dist should work properly. &lt;/p&gt;
&lt;p&gt;The 5 corresponding patches are available bellow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="../code/pyside_patch/pyside_packaging.diff"&gt;Patch for &lt;code&gt;packaging/setuptools/build.py&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="../code/pyside_patch/pyside_Apiextractor.diff"&gt;Patch for &lt;code&gt;packaging/setuptools/modules/Apiextractor&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="../code/pyside_patch/pyside_Generatorrunner.diff"&gt;Patch for &lt;code&gt;packaging/setuptools/modules/Generatorrunner&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="../code/pyside_patch/pyside_Shiboken.diff"&gt;Patch for &lt;code&gt;packaging/setuptools/modules/Shiboken&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="../code/pyside_patch/pyside_PySide.diff"&gt;Patch for &lt;code&gt;packaging/setuptools/modules/PySide&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="IDAPRO"></category><category term="MARE"></category></entry></feed>